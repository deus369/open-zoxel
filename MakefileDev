# Zoxel Makefile!
# clear; make -f MakefileDev -B -j24; ./builds/zoxel-dev
# can add --num-callers=60 to valgrind

# Declare compiler tools and flags
TARGET = builds/zoxel-dev
CC = cc						# Defines the compiler, cc for C code
CFLAGS = -std=c99			# Specificies c99 Standard
# CFLAGS += -fPIC				# Position Independent Code https://stackoverflow.com/questions/5311515/gcc-fpic-option
CFLAGS += -D_DEFAULT_SOURCE	# Needed for a few functions, will be fixed in the future
CFLAGS += -Wall				# For Warnings
# DEV MODE
CFLAGS += -g				# Adds debugging info to executeable
# CFLAGS += -fsanitize=address	# detects memory leaks as well
# Add libraries
LDLIBS = -lGL				# OpenGL library
LDLIBS += -lSDL2			# SDL2 Library
LDLIBS += -lSDL2_image		# SDL2 Image Library
LDLIBS += -lSDL2_mixer		# SDL2 Audio Library
# LDLIBS += -SDL2_IMAGE_FORMATS='["png"]'
LDLIBS += -lm				# for math.h
# used for manual sdl compiling on systems that don't have sdl lib in their package managers
LDLIBS += -L/usr/local/lib
LDLIBS += -Wl,-rpath=/usr/local/lib
# SRCS defines all the files that will be used in the game.
SRCS = $(shell find src/ -type f -name *.c)
SRCS += $(shell find src/ -type f -name *.h)
# OBJS defines all the files used to compile Zoxel.
OBJS = include/flecs.c src/main.c


#install:
#    $(shell test.sh)

all: $(TARGET)

$(TARGET): $(SRCS)
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LDLIBS)

clear:
	$(RM) $(TARGET)

#	$(shell ./bash/install/install.sh)
#./bash/install/install.sh


# CFLAGS += -D_POSIX_C_SOURCE=200112L
# dCFLAGS += -fsanitize=undefined
# LDLIBS += -flto-partition=none ?
# https://stackoverflow.com/questions/66350310/link-time-optimizations-in-cuda-11-what-are-they-and-how-to-use-them
# LDLIBS += -dlto	# Dynamic Link-Time Optimization