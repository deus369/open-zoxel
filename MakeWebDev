# Zoxel Makefile Dev for Web
# Build ~
#	Make with make  -make -f MakeWebDev
# Run !
#	emrun --browser firefox web-demo-dev/zoxel-dev.html

# remember to go to tools > console > multiprocess to get all errors
# install emcc https://emscripten.org/docs/getting_started/downloads.html#installation-instructions-using-the-emsdk-recommended
#zoxel.html:1237:21

# Error 127 - do this
# source ~/emsdk/emsdk_env.sh

# Declare compiler tools and flags
CC = emcc
CFLAGS =
LDLIBS += -std=c99
# what does this do!
LDLIBS += -s WASM=1
# Optimize - Non Devv Build
# LDLIBS += -O3
# Add libraries
LDLIBS += -lGL
LDLIBS += -lSDL
LDLIBS += -s USE_SDL=2
LDLIBS += -s USE_SDL_IMAGE=2
LDLIBS += -s FULL_ES3=1
LDLIBS += -s USE_WEBGL2=1
LDLIBS += -s MIN_WEBGL_VERSION=2
LDLIBS += -s MAX_WEBGL_VERSION=2
LDLIBS += --preload-file resources
# Threadin
# LDLIBS += -s USE_PTHREADS=1
# LDLIBS += -s PTHREAD_POOL_SIZE=2
LDLIBS += -s ALLOW_MEMORY_GROWTH

# Debug Info
# LDLIBS += -s ASSERTIONS
# Link Time Optimization
# LDLIBS += -flto
# dev
# LDLIBS += --profiling
# unsafe
# LDLIBS += --closure 1
# profilers
#--cpuprofiler
#--memoryprofiler
# LDLIBS += --threadprofiler

# OBJS defines all the files used to compile Zoxel.
OBJS =
OBJS += imports/flecs.c
OBJS += src/main.c

# SRCS defines all the files that will be used in the game.
SRCS = 
SRCS += imports/flecs.c 
SRCS += imports/flecs.h
SRCS += src/main.c
# imports
# SRCS += imports/SDL/SDLUtil.c
SRCS += src/core/apps/util/flecs_util.c
# gameplay
# players
SRCS += src/space/players/players.c
# rendering
SRCS += src/core/rendering/rendering.c
SRCS += src/core/rendering/core/rendering_core.c

# SRCS += resources/shaders/BasicRender2D.vert
# SRCS += resources/shaders/BasicRender2D.frag

web-demo-dev/zoxel-dev.html: $(SRCS)
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LDLIBS)